// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: vpower.proto

package vpower

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PowerChunkProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Power  int64  `protobuf:"varint,1,opt,name=power,proto3" json:"power,omitempty"`
	Height int64  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	TxHash []byte `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *PowerChunkProto) Reset() {
	*x = PowerChunkProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpower_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PowerChunkProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerChunkProto) ProtoMessage() {}

func (x *PowerChunkProto) ProtoReflect() protoreflect.Message {
	mi := &file_vpower_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerChunkProto.ProtoReflect.Descriptor instead.
func (*PowerChunkProto) Descriptor() ([]byte, []int) {
	return file_vpower_proto_rawDescGZIP(), []int{0}
}

func (x *PowerChunkProto) GetPower() int64 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *PowerChunkProto) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *PowerChunkProto) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type VPowerProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From        []byte             `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	PubKeyTo    []byte             `protobuf:"bytes,2,opt,name=pub_key_to,json=pubKeyTo,proto3" json:"pub_key_to,omitempty"`
	SumPower    int64              `protobuf:"varint,3,opt,name=sum_power,json=sumPower,proto3" json:"sum_power,omitempty"`
	PowerChunks []*PowerChunkProto `protobuf:"bytes,4,rep,name=power_chunks,json=powerChunks,proto3" json:"power_chunks,omitempty"`
}

func (x *VPowerProto) Reset() {
	*x = VPowerProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpower_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPowerProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPowerProto) ProtoMessage() {}

func (x *VPowerProto) ProtoReflect() protoreflect.Message {
	mi := &file_vpower_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPowerProto.ProtoReflect.Descriptor instead.
func (*VPowerProto) Descriptor() ([]byte, []int) {
	return file_vpower_proto_rawDescGZIP(), []int{1}
}

func (x *VPowerProto) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *VPowerProto) GetPubKeyTo() []byte {
	if x != nil {
		return x.PubKeyTo
	}
	return nil
}

func (x *VPowerProto) GetSumPower() int64 {
	if x != nil {
		return x.SumPower
	}
	return 0
}

func (x *VPowerProto) GetPowerChunks() []*PowerChunkProto {
	if x != nil {
		return x.PowerChunks
	}
	return nil
}

type FrozenVPowerProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// bytes from = 1;
	// int64 refund_height = 2;
	RefundPower int64              `protobuf:"varint,1,opt,name=refund_power,json=refundPower,proto3" json:"refund_power,omitempty"`
	PowerChunks []*PowerChunkProto `protobuf:"bytes,2,rep,name=power_chunks,json=powerChunks,proto3" json:"power_chunks,omitempty"`
}

func (x *FrozenVPowerProto) Reset() {
	*x = FrozenVPowerProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpower_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrozenVPowerProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrozenVPowerProto) ProtoMessage() {}

func (x *FrozenVPowerProto) ProtoReflect() protoreflect.Message {
	mi := &file_vpower_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrozenVPowerProto.ProtoReflect.Descriptor instead.
func (*FrozenVPowerProto) Descriptor() ([]byte, []int) {
	return file_vpower_proto_rawDescGZIP(), []int{2}
}

func (x *FrozenVPowerProto) GetRefundPower() int64 {
	if x != nil {
		return x.RefundPower
	}
	return 0
}

func (x *FrozenVPowerProto) GetPowerChunks() []*PowerChunkProto {
	if x != nil {
		return x.PowerChunks
	}
	return nil
}

var File_vpower_proto protoreflect.FileDescriptor

var file_vpower_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x76, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x76, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x22, 0x58, 0x0a, 0x0f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x22, 0x98, 0x01, 0x0a, 0x0b, 0x56, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f,
	0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x54, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x6d, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x75, 0x6d, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12,
	0x3a, 0x0a, 0x0c, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x22, 0x72, 0x0a, 0x11, 0x46,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x56, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0c, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x42,
	0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x65,
	0x61, 0x74, 0x6f, 0x7a, 0x2f, 0x62, 0x65, 0x61, 0x74, 0x6f, 0x7a, 0x2d, 0x67, 0x6f, 0x2f, 0x63,
	0x74, 0x72, 0x6c, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vpower_proto_rawDescOnce sync.Once
	file_vpower_proto_rawDescData = file_vpower_proto_rawDesc
)

func file_vpower_proto_rawDescGZIP() []byte {
	file_vpower_proto_rawDescOnce.Do(func() {
		file_vpower_proto_rawDescData = protoimpl.X.CompressGZIP(file_vpower_proto_rawDescData)
	})
	return file_vpower_proto_rawDescData
}

var file_vpower_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_vpower_proto_goTypes = []any{
	(*PowerChunkProto)(nil),   // 0: vpower.powerChunkProto
	(*VPowerProto)(nil),       // 1: vpower.VPowerProto
	(*FrozenVPowerProto)(nil), // 2: vpower.FrozenVPowerProto
}
var file_vpower_proto_depIdxs = []int32{
	0, // 0: vpower.VPowerProto.power_chunks:type_name -> vpower.powerChunkProto
	0, // 1: vpower.FrozenVPowerProto.power_chunks:type_name -> vpower.powerChunkProto
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_vpower_proto_init() }
func file_vpower_proto_init() {
	if File_vpower_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vpower_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PowerChunkProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpower_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*VPowerProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpower_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*FrozenVPowerProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vpower_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vpower_proto_goTypes,
		DependencyIndexes: file_vpower_proto_depIdxs,
		MessageInfos:      file_vpower_proto_msgTypes,
	}.Build()
	File_vpower_proto = out.File
	file_vpower_proto_rawDesc = nil
	file_vpower_proto_goTypes = nil
	file_vpower_proto_depIdxs = nil
}
